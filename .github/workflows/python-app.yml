# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  issues: write
  pull-requests: write
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.8
      uses: actions/setup-python@v4 
      with:
        python-version: "3.8"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        curl -sSL https://install.python-poetry.org | python3 - --version 1.2.0b2
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        poetry install

    - name: extract files from README.md
      run: |
        poetry run mkcodes --github --safe --output tests/test_md.py README.md

    - name: Run pre-commit
      run : |
        poetry run pre-commit run -a

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. Be compatible with black
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --extend-ignore=E203 --statistics

    - name: Run mypy on the code
      run: |
        poetry run mypy -p tawazi

    - name: Run tests
      run: |
        set -o pipefail
        poetry run pytest | tee pytest-coverage.txt
        # test extracted python code from markdown
         poetry run python tests/test_md.py
